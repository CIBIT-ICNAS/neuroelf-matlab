function xfiginit(xfigver)
%XFIGINIT  Perform initialization of XFIGURE class singleton/factory.
%   This is an internally called function and should not be used outside
%   of the xfigure class constructor (first call).
%
%   See also XFIGURE

% Version:  v1.1
% Build:    16042109
% Date:     Apr-21 2016, 9:44 AM EST
% Author:   Jochen Weber, SCAN Unit, Columbia University, NYC, NY, USA
% URL/Info: http://neuroelf.net/

% Copyright (c) 2009 - 2016, Jochen Weber
% All rights reserved.
%
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions are met:
%     * Redistributions of source code must retain the above copyright
%       notice, this list of conditions and the following disclaimer.
%     * Redistributions in binary form must reproduce the above copyright
%       notice, this list of conditions and the following disclaimer in the
%       documentation and/or other materials provided with the distribution.
%     * Neither the name of Columbia University nor the
%       names of its contributors may be used to endorse or promote products
%       derived from this software without specific prior written permission.
%
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
% ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
% WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
% DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY
% DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
% (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
% LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
% ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
% (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
% SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

% global references
global ne_methods xfigmlup xfigsngl;

% make sure NeuroElf library is loaded
nelf = neuroelf();

% init reference struct
xfigsngl = struct( ...
    'aliases',      {{struct, struct, ...
        struct( ...
            'callbackclreq',  'CloseRequestFcn', ...
            'callbackdelete', 'DeleteFcn', ...
            'callbackresize', 'ResizeFcn', ...
            'contextmenu',    'uicontextmenu', ...
            'resizeable',     'Resize', ...
            'title',          'Name'), ...
        struct( ...
            'caption',        'String', ...
            'color',          'BackgroundColor', ...
            'contextmenu',    'uicontextmenu', ...
            'enabled',        'Enable', ...
            'halign',         'HorizontalAlignment', ...
            'textcolor',      'ForegroundColor', ...
            'tooltip',        'TooltipString', ...
            'top',            'ListboxTop'), ...
        struct('caption', 'Label', 'enabled', 'Enable', 'string', 'Label'), ...
        struct('caption', 'Label', 'enabled', 'Enable', 'string', 'Label')}}, ...
    'computer',     computer(), ...
    'contextobject', -1, ...
    'dblclickint',  0.8 / 86400, ...
    'figbgcolor',   [0.8, 0.8, 0.8], ...
    'figptypes',    {{'usletter'}}, ...
    'fontfact',     0.5, ...
    'fontsizes',    struct('xsmall', 8, 'small', 9, 'normal', 10, 'large', 12, 'xlarge', 16), ...
    'funits',       struct('centimeters', 0, 'inches', 0, 'normalized', -1, 'pixels', 1, 'points', 0), ...
    'gccount',      0, ...
    'gcfreq',       1000, ...
    'hvisible',     'callback', ...
    'i_root',       -1, ...
    'is_init',      false, ...
    'linkhandler',  [], ...
    'mlversion',    str2double(ne_methods.splittocell(regexprep(version, ' .*$', ''), '.')), ...
    'nelf',         nelf, ...
    'objtlup',      {{'UIC_', 'FIG_', 'UIM_', 'UIX_'}}, ...
    'objtypel',     {{'root', 'figure', 'uicontrol', 'uimenu', 'uicontextmenu'}}, ...
    'objtypes',     struct( ...
        'r', 0,           'root',            0, ...
        'f', 1, 'fig', 1, 'figure',          1, ...
        'c', 2, 'uic', 2, 'uicontrol',       2, ...
        'm', 3, 'uim', 3, 'uimenu',          3, ...
        'x', 4, 'uix', 4, 'uicontextmenu',   4), ...
    'objtypet',     {{'FIG_', 'UIC_', 'UIM_', 'UIX_'}}, ...
    'oouictypes',   struct('checkbox', 0, 'edit', 0, 'listbox', 0, 'popupmenu', 0, 'radiobutton', 1, 'toggle', 0), ...
    'optfig',       [], ...
    'optuic',       [], ...
    'optuim',       [], ...
    'optuix',       [], ...
    'outfig',       [], ...
    'outuic',       [], ...
    'outuim',       [], ...
    'outuix',       [], ...
    'progbarface',  32, ...
    'progupdrate',  0.2 / 86400, ...
    'punits',       struct('centimeters', 0, 'inches', 1, 'normalized', -1, 'points', 0), ...
    'rp_init',      get(0), ...
    'slideswidth',  20, ...
    'suppsilent',   true, ...
    'tags',         struct, ...
    'uictypes',     struct( ...
        'blabel',       'BUILTIN', ...
        'button',       'pushbutton', ...
        'checkbox',     'checkbox', ...
        'dropdown',     'popupmenu', ...
        'edit',         'edit', ...
        'frame',        'frame', ...
        'label',        'text', ...
        'listbox',      'listbox', ...
        'multiedit',    'edit', ...
        'popupmenu',    'popupmenu', ...
        'pushbutton',   'pushbutton', ...
        'radiobutton',  'radiobutton', ...
        'slider',       'slider', ...
        'text',         'text', ...
        'toggle',       'togglebutton', ...
        'togglebutton', 'togglebutton', ...
        'xaxes',        'BUILTIN', ...
        'xbuttonbar',   'BUILTIN', ...
        'ximage',       'BUILTIN', ...
        'xlabel',       'BUILTIN', ...
        'xlink',        'BUILTIN', ...
        'xprogress',    'BUILTIN'), ...
    'uixtypes',     struct, ...
    'units',        struct('centimeters', 0, 'characters', 0, 'inches', 0, 'normalized', -1, 'pixels', 1, 'points', 0),  ...
    'version',      xfigver, ...
    'xobjtypes',    struct);

% rework MATLAB version
xfigsngl.mlversion = 100 * xfigsngl.mlversion(1) + xfigsngl.mlversion(2);

% determine runtime features
ghud = false;
mainver = ne_methods.mainver();
try
    % turn off property hiding
    if mainver > 6 && mainver < 9
        hud  = get(0, 'HideUndocumented');
        set(0, 'HideUndocumented', 'off');
        ghud = true;
    end
catch xfigerror
    neuroelf_lasterr(xfigerror);
end

% if necessary, turn on hiding again
if ghud
    set(0, 'HideUndocumented', hud);
end

% test objects to see if everything works
try
    tfig = figure('Visible', 'off');
catch xfigerror
    neuroelf_lasterr(xfigerror);
    xfigsngl(:) = [];
    error('neuroelf:xfigure:FiguresUnavailable', 'Can''t create any figures with this setup.');
end

% initialize array with ROOT object
xfigmlup = get(tfig, 'Parent');

% get valid papertype options and clean up object
if mainver > 6
    xfigsngl.figptypes = set(tfig, 'PaperType');
end

% get fontsize factor
set(tfig, 'Position', [100, 100, 440, 200], 'Visible', 'on');
try
    tau = uicontrol(tfig, 'Style', 'text', 'Position', [0, 90, 440, 20], ...
        'String', char(48:90), 'FontSize', 10);
    ttxp = get(tau);
    xfigsngl.fontfact = 165 / ttxp.Extent(3);
catch xfigerror
    neuroelf_lasterr(xfigerror);
end
tax = axes('Parent', tfig, 'Position', [0, 0, 1, 1]);
ttxt = text(0.1, 0.5, char(48:90), 'Parent', tax, 'FontSize', 10);
ttxp = get(ttxt);
xfigsngl.fontfact = xfigsngl.fontfact + 0.375 / ttxp.Extent(3);
xfigsngl.fontfactuse = true;

% clean up temporary figure
delete(tfig);

% set valid types for context menu objects
xfigsngl.uixtypes = struct ( ...
    'figure',      xfigsngl.objtypes.figure,    ...
    'uicontrol',   xfigsngl.objtypes.uicontrol, ...
    'axes',        xfigsngl.objtypes.uicontrol, ...
    'image',       xfigsngl.objtypes.uicontrol, ...
    'line',        xfigsngl.objtypes.uicontrol, ...
    'patch',       xfigsngl.objtypes.uicontrol, ...
    'rectangle',   xfigsngl.objtypes.uicontrol, ...
    'text',        xfigsngl.objtypes.uicontrol  ...
);

% set types for extended handle lookup
xfigsngl.xobjtypes = struct ( ...
    'axes',        xfigsngl.objtypes.uicontrol, ...
    'image',       xfigsngl.objtypes.uicontrol, ...
    'line',        xfigsngl.objtypes.uicontrol, ...
    'patch',       xfigsngl.objtypes.uicontrol, ...
    'rectangle',   xfigsngl.objtypes.uicontrol, ...
    'text',        xfigsngl.objtypes.uicontrol  ...
);

% valid and default options for figures (for checkstruct)
xfigsngl.optfig = { ...
    'BackingStore',    'char',    {'on', 'off'}, 'off'; ...
    'CallbackClReq',   '(cell|char)', 'expression',  'closereq;'; ...
    'CallbackClick',   '(cell|char)', 'expression',  ''; ...
    'CallbackDelete',  'char',    'expression',  ''; ...
    'CallbackKey',     'char',    'expression',  ''; ...
    'CallbackMDown',   '(cell|char)', 'expression',  ''; ...
    'CallbackMMove',   '(cell|char)', 'expression',  ''; ...
    'CallbackMUp',     '(cell|char)', 'expression',  ''; ...
    'CallbackResize',  '(cell|char)', 'expression',  ''; ...
    'Color',           'double',  'noinfnan',    xfigsngl.figbgcolor; ...
    'ContextMenu',     'char',    'label',       ''; ...
    'DoubleBuffer',    'char',    {'on', 'off'}, 'on'; ...
    'FieldLinkCont',   '',        '',            []; ...
    'FieldLinkSpec',   '',        '',            []; ...
    'Interrupts',      'char',    {'on', 'off'}, 'on'; ...
    'IntegerHandle',   'char',    {'on', 'off'}, 'off'; ...
    'MenuBar',         'char',    {'none', 'figure'}, 'none'; ...
    'MinSize',         'double',  'nonempty',    []; ...
    'Modal',           'char',    {'on', 'off'}, 'off'; ...
    'Page',            'double',  'noinfnan',    []; ...
    'PaperUnits',      'char',    fieldnames(xfigsngl.punits), 'inches'; ...
    'PaperOrientation','char',    {'portrait', 'landscape', 'rotated'}, 'portrait'; ...
    'PaperPosition',   'double',  'noinfnan',    [0.25, 2.5, 8, 6]; ...
    'PaperSize',       'double',  'noinfnan',    [8.5, 11]; ...
    'PaperType',       'char',    xfigsngl.figptypes, 'usletter'; ...
    'Position',        'double',  'nonempty',    [0, 0, 300, 200]; ...
    'PrintBW',         'char',    {'on', 'off'}, 'on'; ...
    'Resizeable',      'char',    {'on', 'off'}, 'off'; ...
    'Tag',             'char',    'label',       ''; ...
    'Title',           'char',    'deblank',     ''; ...
    'UserData',        '',        '',            []; ...
    'Units',           'char'     fieldnames(xfigsngl.units), 'pixels'; ...
    'Visible',         'char',    {'on', 'off'}, 'on' ...
};

% valid and default options for uicontrols (for checkstruct)
xfigsngl.optuic = { ...
    'Callback',         '(cell|char)', 'expression',  ''; ...
    'CallbackClick',    '(cell|char)', 'expression',  ''; ...
    'CallbackDblClick', '(cell|char)', 'expression',  ''; ...
    'CallbackDelete',   'char',    'expression',  ''; ...
    'Caption',          '',        '',            ''; ...
    'ColorBG',          'double',  'noinfnan',    []; ...
    'ColorFG',          'double',  'noinfnan',    []; ...
    'ContextMenu',      'char',    'label',       ''; ...
    'EGroups',          'char',    'deblank',     ''; ...
    'Enabled',          'char',    {'on', 'off'}, 'on'; ...
    'FontItalic',       'char',    {'normal', 'italique', 'oblique'}, 'normal'; ...
    'FontName',         'char',    'nonempty',    'default'; ...
    'FontSize',         '',        '',            10 * xfigsngl.fontfact; ...
    'FontUnits',        'char',    fieldnames(xfigsngl.funits), 'points'; ...
    'FontWeight',       'char',    {'light', 'normal', 'demi', 'bold'}, 'normal'; ...
    'HAlign',           'char',    {'left', 'center', 'right'}, 'center'; ...
    'Interrupts',       'char',    {'on', 'off'}, 'on'; ...
    'MinMaxTop',        'double',  'noinfnan',    []; ...
    'Page',             'double',  'noinfnan',    []; ...
    'Position',         'double',  'nonempty',    [0, 0, 1, 1]; ...
    'RGroup',           'char',    'label',       ''; ...
    'ResizeSpec',       'cell',    '',            {}; ...
    'Rotation',         'double',  'noinfnan',    ''; ...
    'SGroups',          'char',    'label',       ''; ...
    'Selectable',       'char',    {'on', 'off'}, 'on'; ...
    'SliderStep',       'double',  'noinfnan',    []; ...
    'Tag',              'char',    'label',       ''; ...
    'ToolTip',          'char',    'deblank',     ''; ...
    'Type',             'char',    'label',       ''; ...
    'UserData',         '',        '',            []; ...
    'Units',            'char'     fieldnames(xfigsngl.units), 'pixels'; ...
    'VAlign',           'char',    {'top', 'middle', 'bottom'}, 'bottom'; ...
    'VGroups',          'char',    'deblank',     ''; ...
    'Value',            'double',  '',            []; ...
    'Visible',          'char',    {'on', 'off'}, 'on' ...
};

% valid and default options for uimenus (for checkstruct)
xfigsngl.optuim = { ...
    'Accelerator',     'char',    'nonempty',    ''; ...
    'Callback',        '(cell|char)', 'expression',  ''; ...
    'CallbackDelete',  'char',    'expression',  ''; ...
    'Caption',         'char',    'nonempty',    ''; ...
    'Checked',         'char',    {'on', 'off'}, 'off'; ...
    'Color',           'double',  'noinfnan',    []; ...
    'EGroups',         'char',    'deblank',     ''; ...
    'Enabled',         'char',    {'on', 'off'}, 'on'; ...
    'Interrupts',      'char',    {'on', 'off'}, 'on'; ...
    'Position',        'double',  'noinfnan',    []; ...
    'Separator',       'char',    {'on', 'off'}, 'off'; ...
    'Tag',             'char',    'label',       ''; ...
    'UserData',        '',        '',            []; ...
    'VGroups',         'char',    'deblank',     ''; ...
    'Visible',         'char',    {'on', 'off'}, 'on' ...
};

% valid and default options for uicontextmenus (for checkstruct)
xfigsngl.optuix = { ...
    'Callback',        'char',    'expression',  ''; ...
    'CallbackDelete',  'char',    'expression',  ''; ...
    'Interrupts',      'char',    {'on', 'off'}, 'on'; ...
    'Tag',             'char',    'label',       ''; ...
    'UserData',        '',        '',            []  ...
};

% display output fields: figure
xfigsngl.outfig = struct( ...
    'CallbackClReq',  'CloseRequestFcn', ...
    'CallbackKey',    'KeyPressFcn', ...
    'CallbackMDown',  'WindowButtonDownFcn', ...
    'CallbackMMove',  'WindowButtonMotionFcn', ...
    'CallbackMUp',    'WindowButtonUpFcn', ...
    'CallbackResize', 'ResizeFcn', ...
    'Color',          'Color', ...
    'ContextMenu',    'UIContextMenu', ...
    'NormalOrModal',  'WindowStyle', ...
    'Resizable',      'Resize', ...
    'Title',          'Name', ...
    'UserData',       'UserData', ...
    'Visible',        'Visible');

% uicontrol
xfigsngl.outuic = struct( ...
    'Callback',       'Callback', ...
    'Caption',        'String', ...
    'ContextMenu',    'UIContextMenu', ...
    'Enabled',        'Enable', ...
    'Position',       'Position', ...
    'ToolTip',        'TooltipString', ...
    'Type',           'Style', ...
    'Units',          'Units', ...
    'UserData',       'UserData', ...
    'Value',          'Value', ...
    'Visible',        'Visible');

% uimenu
xfigsngl.outuim = struct( ...
    'Accelerator',    'Accelerator', ...
    'Callback',       'Callback', ...
    'Caption',        'Label', ...
    'Checked',        'Checked', ...
    'Children',       'Children', ...
    'Enabled',        'Enable', ...
    'Separator',      'Separator', ...
    'UserData',       'UserData', ...
    'Visible',        'Visible');

% uicontextmenu
xfigsngl.outuix = struct( ...
    'Callback',       'Callback', ...
    'Children',       'Children', ...
    'UserData',       'UserData', ...
    'Visible',        'Visible');

% get maximum figure size for each units' name
if mainver > 6
    unitnames = fieldnames(xfigsngl.units);
    for ucount = 1:numel(unitnames)
        set(0, 'Units', unitnames{ucount});
        xfigsngl.units.(unitnames{ucount}) = get(0, 'ScreenSize');
    end
    set(0, 'Units', xfigsngl.rp_init.Units);
else
    xfigsngl.units.pixels = get(0, 'ScreenSize');
end

% try to findout what to do with XLinks
if ispc

    % for Windows we use explorer.exe
    xfigsngl.linkhandler = {'explorer ',' &'};
else

    % on unix/linux systems we search for a suitable browser...
    [suczero, sucfound] = system('which mozilla');
    if suczero
        [suczero, sucfound] = system('which netscape');
    end
    if suczero
        [suczero, sucfound] = system('which konqueror');
    end
    if suczero
        sucfound = '';
    end

    % if nothing found, disable link handler
    if isempty(sucfound)
        xfigsngl.linkhandler=cell(0);

    % otherwise set handler up
    else
        xfigsngl.linkhandler={[deblank(sucfound) ' '],' &'};
    end
end

% class is init now
xfigsngl.is_init = true;
