# BinaryFileFormat (leave this tag as its own magic token!)

# BrainVoyager QX file format for *.FBR files (FiBeR binary files)
# FBR FileVersions supported: 5
#
# Version:  v1.0
# Build:    16011310
# Date:     Jan-13 2016, 10:40 AM EST
# Author:   Jochen Weber, SCAN Unit, Columbia University, NYC, NY, USA
# URL/Info: http://neuroelf.net/

# FILE FORMAT
Description:BrainVoyager FiBeR files (*.fbr)
EncodingSyntax:ieee-le
Extensions:fbr
Magic:|
name             |range       |type    |magic
FBR_Header       |  1,   4    |hex     |a4, d3, c2, b1
EndMagic

# FIELDS
ListOfFields:!
type  !cond                   !disktype!datatype!dim                      !default !varname
EXPRE !$BFFWRITE          !!!!!@FBRMagic = [164, 211, 194, 177];
FIELD !                       !uint8   !double  !1, 4                     !        !FBRMagic
EXPRE !$BFFREAD           !!!!! ...
if ~isequal(@FBRMagic, [164, 211, 194, 177]), ...
    fclose(fid); ...
    xffroot = xff; ...
    try, ...
        @@ = tffio($FILENAME, xffroot.Formats.tff(xffroot.Extensions.fbra{2})); ...
        for fib_gcount = 1:numel(@Group), ...
            for fib_fcount = 1:numel(@Group(fib_gcount).Fiber), ...
                @Group(fib_gcount).Fiber(fib_fcount).PointColors = @Group(fib_gcount).Fiber(fib_fcount).FiberPoints(:, 4:end); ...
                @Group(fib_gcount).Fiber(fib_fcount).FiberPoints(:, 4:end) = []; ...
            end, ...
        end, ...
    catch ne_eo; ...
        fid = fopen($FILENAME, 'r', 'ieee-le'); ...
        rethrow(ne_eo); ...
    end, ...
    fid = fopen($FILENAME, 'r', 'ieee-le'); ...
    fseek(fid, 0, 1); ...
    $BFFREAD = false; ...
    $RemSize = 0; ...
end
BLOOP !$BFFREAD || $BFFWRITE  ! ! !1 ! !BinaryFile
FIELD !                       !uint32  !double  !1, 1                     !5       !FileVersion
EXPRE !$BFFWRITE          !!!!! ...
if ischar(@CoordsType), ...
    if strcmpi(@CoordsType, 'bvi'), ...
        @CoordsType = 2; ...
    else, ...
        @CoordsType = 1; ...
    end, ...
end
FIELD !                       !uint32  !double  !1, 1                     !2       !CoordsType
EXPRE !$BFFREAD           !!!!! ...
if @CoordsType == 2, ...
    @CoordsType = 'BVI'; ...
else, ...
    @CoordsType = 'unknown'; ...
end
FIELD !                       !single  !double  !1, 1                     !        !FibersOriginX
FIELD !                       !single  !double  !1, 1                     !        !FibersOriginY
FIELD !                       !single  !double  !1, 1                     !        !FibersOriginZ
FIELD !                       !uint32  !double  !1, 1                     !        !NrOfGroups

EXPRE !$BFFREAD           !!!!!@Group = emptystruct({'Name', 'Visible', 'Animate', 'Thickness', 'Color', 'NrOfFibers', 'Fiber'}, [1, @NrOfGroups]);
BLOOP !                       ! ! !@NrOfGroups ! !GroupNo
FIELD !                       !cstring !cstring !1, 1                     !        !Group($GroupNo).Name
FIELD !                       !uint32  !double  !1, 1                     !        !Group($GroupNo).Visible
FIELD !                       !uint32  !double  !1, 1                     !        !Group($GroupNo).Animate
FIELD !                       !single  !double  !1, 1                     !        !Group($GroupNo).Thickness
FIELD !                       !uint8   !double  !1, 3                     !        !Group($GroupNo).Color
FIELD !                       !uint32  !double  !1, 1                     !        !Group($GroupNo).NrOfFibers
EXPRE !                   !!!!!$g_nofibers = @Group($GroupNo).NrOfFibers;
EXPRE !$BFFREAD           !!!!!@Group($GroupNo).Fiber = emptystruct({'NrOfPoints', 'FiberPoints', 'PointColors'}, [1, $g_nofibers]);
BLOOP !                       ! ! !$g_nofibers ! !FiberNo
FIELD !                       !uint32  !double  !1, 1                     !        !Group($GroupNo).Fiber($FiberNo).NrOfPoints
EXPRE !                   !!!!!$f_nopoints = @Group($GroupNo).Fiber($FiberNo).NrOfPoints;
FIELD !                       !single  !double  !$f_nopoints, 3           !        !Group($GroupNo).Fiber($FiberNo).FiberPoints
FIELD !                       !uint8   !double  !$f_nopoints, 3           !        !Group($GroupNo).Fiber($FiberNo).PointColors
ELOOP !                       ! ! !  ! !FiberNo
ELOOP !                       ! ! !  ! !GroupNo
ELOOP !                       ! ! !  ! !BinaryFile

# Read rest of File into REMAININGCONTENT
EXPRE !$BFFREAD           !!!!!$RemSize = $FILESIZE - ftell(fid);
EXPRE !$BFFWRITE          !!!!!$RemSize = 0; try, if isfield(@@, 'REMAININGCONTENT'), $RemSize = prod(size(@REMAININGCONTENT)); end, end
FIELD !$RemSize > 0           !uint8   !uint8   !1, $RemSize              !        !REMAININGCONTENT

EndListOfFields

NewFileCode:!
@FileVersion = 5;
@CoordsType = 'BVI';
@FibersOriginX = 128;
@FibersOriginY = 128;
@FibersOriginZ = 128;
@NrOfGroups = 1;
@Group.Name = 'default';
@Group.Visible = 1;
@Group.Animate = 0;
@Group.Thickness = 0.3;
@Group.Color = [64, 64, 192];
@Group.NrOfFibers = 0;
@Group.Fiber = emptystruct({'NrOfPoints', 'FiberPoints'});
EndNewFileCode
